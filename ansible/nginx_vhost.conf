upstream jenkins_docker {
  server 172.17.0.1:8080;
}

# faye will die if we haven't pass header UPGRADE to it
# when getting client.js
map $http_upgrade $upgrade_type {
  default $http_upgrade;
  ''      http;
}

server {
  listen 80;
  server_name _;

  ## Access and error logs.
  access_log  /var/log/nginx/access.log main;
  error_log   /var/log/nginx/error.log;

  location / {
    return 301 https://$host$request_uri;

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;
    proxy_pass http://jenkins_docker;
  }
}

server {
  listen 443;
  server_name _;

  ## Access and error logs.
  access_log  /var/log/nginx/access_ssl.log main;
  error_log   /var/log/nginx/error_ssl.log;

  ssl on;
  ssl_certificate /etc/ssl/certs/self_signed.crt;
  ssl_certificate_key /etc/ssl/private/self_signed.key;

  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;

  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS;
  ssl_prefer_server_ciphers on;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

  # support only the listed http verbs only
  if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS)$ ){
    return 405;
  }

  # Home
  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto https;
    proxy_redirect off;
    proxy_pass http://jenkins_docker;
  }
}
